   check_overdispersion  Check overdispersion of GL(M)M’s
Description
 check_overdispersion() checks generalized linear (mixed) models for overdispersion.

#### Usage 
<pre><code>

 check_overdispersion(x, ...)
Arguments
 x   Fitted model of class merMod, glmmTMB, glm, or glm.nb (package MASS).
 ... Currently not used.
Details
 Overdispersion occurs when the observed variance is higher than the variance of a theoretical model.
 For Poisson models, variance increases with the mean, thus, variance usually (roughly) equals the
 mean value. If the variance is much higher, the data are "overdispersed".
   Interpretation of the Dispersion Ratio: If the dispersion ratio is close to one, a Poisson model
   fits well to the data. Dispersion ratios larger than one indicate overdispersion, thus a negative
   binomial model or similar might fit better to the data. A p-value < .05 indicates overdispersion.
   Overdispersion in Poisson Models: For Poisson models, the overdispersion test is based on the
   code from Gelman and Hill (2007), page 115.
   Overdispersion in Mixed Models: For merMod- and glmmTMB-objects, check_overdispersion()
   is based on the code in the GLMM FAQ, section How can I deal with overdispersion in GLMMs?.
   Note that this function only returns an approximate estimate of an overdispersion parameter, and
   is probably inaccurate for zero-inflated mixed models (fitted with glmmTMB).
   How to fix Overdispersion: Overdispersion can be fixed by either modeling the dispersion pa-
   rameter, or by choosing a different distributional family (like Quasi-Poisson, or negative binomial,
   see Gelman and Hill (2007), pages 115-116 ).
Value
 A list with results from the overdispersion test, like chi-squared statistics, p-value or dispersion
 ratio.
check_singularity  21

#### Examples
if (require("glmmTMB")) {
   data(Salamanders)
   m <- glm(count ~ spp + mined, family = poisson, data = Salamanders)
   check_overdispersion(m)
   m <- glmmTMB(
  count ~ mined + spp + (1 | site),
  family = poisson,
  data = Salamanders
   )
   check_overdispersion(m)
}
  check_singularity Check mixed models for boundary fits
Description
Check mixed models for boundary fits.

#### Usage 
<pre><code>

check_singularity(x, tolerance = 1e-05, ...)
Arguments
x   A mixed model.
tolerance   Indicates up to which value the convergence result is accepted. The larger
tolerance is, the stricter the test will be.
... Currently not used.
Details
If a model is "singular", this means that some dimensions of the variance-covariance matrix have
been estimated as exactly zero. This often occurs for mixed models with complex random effects
structures.
“While singular models are statistically well defined (it is theoretically sensible for the true max-
imum likelihood estimate to correspond to a singular fit), there are real concerns that (1) singular
fits correspond to overfitted models that may have poor power; (2) chances of numerical problems
22 check_singularity
and mis-convergence are higher for singular models (e.g. it may be computationally difficult to
compute profile confidence intervals for such models); (3) standard inferential procedures such as
Wald statistics and likelihood ratio tests may be inappropriate.” (lme4 Reference Manual )
There is no gold-standard about how to deal with singularity and which random-effects specifi-
cation to choose. Beside using fully Bayesian methods (with informative priors), proposals in a
frequentist framework are:
   *  avoid fitting overly complex models, such that the variance-covariance matrices can be esti-
  mated precisely enough (Matuschek et al. 2017 )
   *  use some form of model selection to choose a model that balances predictive accuracy and
  overfitting/type I error (Bates et al. 2015, Matuschek et al. 2017 )
   *  “keep it maximal”, i.e. fit the most complex model consistent with the experimental design,
  removing only terms required to allow a non-singular fit (Barr et al. 2013 )
Note the different meaning between singularity and convergence: singularity indicates an issue with
the "true" best estimate, i.e. whether the maximum likelihood estimation for the variance-covariance
matrix of the random effects is positive definite or only semi-definite. Convergence is a question of
whether we can assume that the numerical optimization has worked correctly or not.
Value
TRUE if the model fit is singular.


#### Examples
if (require("lme4")) {
   data(sleepstudy)
   set.seed(123)
   sleepstudy$mygrp <- sample(1:5, size = 180, replace = TRUE)
   sleepstudy$mysubgrp <- NA
   for (i in 1:5) {
 filter_group <- sleepstudy$mygrp == i
 sleepstudy$mysubgrp[filter_group] <-
sample(1:30, size = sum(filter_group), replace = TRUE)
   }
   model <- lmer(
 Reaction ~ Days + (1 | mygrp / mysubgrp) + (1 | Subject),
 data = sleepstudy
check_zeroinflation23
   )
   check_singularity(model)
}
